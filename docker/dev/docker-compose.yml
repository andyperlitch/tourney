version: '3.1'

services:
  postgres:
    container_name: postgres
    image: postgres
    restart: always
    volumes:
      - $PWD/.dbData:/data/db
    networks:
      - skynet
    environment:
      POSTGRES_PASSWORD: realeyesrealizereallies
      POSTGRES_USER: localdev
      POSTGRES_DB: tourney
  # mailserver:
  #   image: docker.io/mailserver/docker-mailserver:latest
  #   env_file: $PWD/mailserver.env
  #   hostname: mailserver
  #   domainname: example.com
  #   container_name: mailserver
  #   ports:
  #     - "9925:25"
  #     - "9143:143"
  #     - "9587:587"
  #     - "9993:993"
  #   volumes:
  #     - $PWD/.mailData/maildata:/var/mail
  #     - $PWD/.mailData/mailstate:/var/mail-state
  #     - $PWD/.mailData/maillogs:/var/log/mail
  #     - /etc/localtime:/etc/localtime:ro
  #     - ./config/:/tmp/docker-mailserver/
  #   environment:
  #     - ENABLE_SPAMASSASSIN=1
  #     - SPAMASSASSIN_SPAM_TO_INBOX=1
  #     - ENABLE_CLAMAV=1
  #     - ENABLE_FAIL2BAN=1
  #     - ENABLE_POSTGREY=1
  #     - ENABLE_SASLAUTHD=0
  #     - ONE_DIR=1
  #     - DMS_DEBUG=0
  #   cap_add:
  #     - NET_ADMIN
  #     - SYS_PTRACE
  #   restart: always
  #   networks: 
      # - skynet
  adminer:
    image: adminer
    hostname: adminer
    ports:
      - '8080:8080'
    depends_on:
      - postgres
    networks:
      - skynet
  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    volumes:
      - $PWD/.sessionsData:/data
    networks:
      - skynet
  app:
    image: tourney_app:local
    container_name: tourney_app
    working_dir: /root/app
    # tty: true
    stdin_open: true
    # this tells docker compose not to pull from dockerhub, but instead build the image from the given docker file below
    build:
      context: $PWD
      dockerfile: $PWD/docker/dev/Dockerfile
    volumes:
      - tourney_app-sync:/root/app:nocopy
      # dirs to not sync over
      - /root/app/node_modules/
      - /root/app/coverage/
      - /root/app/build/
    env_file: ../../.env
    networks:
      - skynet
    ports:
      - '5000:5000'
      - '9229:9229'
volumes:
  # This is for the docker-sync container that gets started
  tourney_app-sync:
    external: true

networks:
  skynet: